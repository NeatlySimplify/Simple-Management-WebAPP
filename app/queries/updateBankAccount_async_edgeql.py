# AUTOGENERATED FROM 'app/queries/updateBankAccount.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class updateBankAccountResult(NoPydanticValidation):
    id: uuid.UUID


async def updateBankAccount(
    executor: edgedb.AsyncIOExecutor,
    *,
    bankName: str,
    agency: str,
    accountNumber: str,
    balance: float,
    account_type: str,
    conta: uuid.UUID,
) -> updateBankAccountResult | None:
    return await executor.query_single(
        """\
        update BankAccount filter .id = <uuid>$conta set {
            bankName:= <str>$bankName ?? .bankName,
            agency:= <str>$agency ?? .agency,
            accountNumber:= <str>$accountNumber ?? .accountNumber,
            balance:= <float32>$balance ?? .balance,
            accountType:= <str>$account_type ?? .accountType,
        };\
        """,
        bankName=bankName,
        agency=agency,
        accountNumber=accountNumber,
        balance=balance,
        account_type=account_type,
        conta=conta,
    )
