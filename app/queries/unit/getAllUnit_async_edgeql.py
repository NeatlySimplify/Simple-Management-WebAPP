# AUTOGENERATED FROM 'app/queries/unit/getAllUnit.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid
from typing import List


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class getAllUnitResult(NoPydanticValidation):
    id: uuid.UUID
    email: str
    name: str | None
    govt_id: str | None
    type_unit: str | None
    address: getAllUnitResultAddress | None


@dataclasses.dataclass
class getAllUnitResultAddress(NoPydanticValidation):
    id: uuid.UUID
    city: str | None
    state: str | None


async def getAllUnit(
    executor: edgedb.AsyncIOExecutor,
    *,
    user_id: uuid.UUID,
) -> List[getAllUnitResult] | None:
    return await executor.query_single(
        """\
        Select User.unit {
            id,
            email,
            name,
            govt_id,
            type_unit,
            address:{
                city,
                state
            }
        } filter .id = <uuid>$user_id\
        """,
        user_id=user_id,
    )
