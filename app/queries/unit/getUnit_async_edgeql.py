# AUTOGENERATED FROM 'app/queries/unit/getUnit.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class getUnitResult(NoPydanticValidation):
    id: uuid.UUID
    email: str
    name: str | None
    govt_id: str | None
    sex: str | None
    relationship: str | None
    details: str | None
    type_unit: str | None
    birth: datetime.date | None
    phone: getUnitResultPhone | None
    address: getUnitResultAddress | None
    custom_fields: str | None


@dataclasses.dataclass
class getUnitResultAddress(NoPydanticValidation):
    id: uuid.UUID
    state: str | None
    city: str | None
    district: str | None
    street: str | None
    number: int | None
    complement: str | None
    postal: str | None


@dataclasses.dataclass
class getUnitResultPhone(NoPydanticValidation):
    id: uuid.UUID
    number: str | None
    contact: str | None
    complement: str | None


async def getUnit(
    executor: edgedb.AsyncIOExecutor,
    *,
    id: uuid.UUID,
) -> getUnitResult | None:
    return await executor.query_single(
        """\
        select Unit {
            id,
            email,
            name,
            govt_id,
            sex,
            relationship,
            details,
            type_unit,
            birth,
            phone:{
                id,
                number,
                contact,
                complement
            },
            address:{
                id,
                state,
                city,
                district,
                street,
                number,
                complement,
                postal
            },
            custom_fields
        } filter .id = <uuid>$id;\
        """,
        id=id,
    )
