# AUTOGENERATED FROM 'app/queries/getAllClientsFromTemplate.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class getAllClientsFromTemplateResult(NoPydanticValidation):
    id: uuid.UUID


async def getAllClientsFromTemplate(
    executor: edgedb.AsyncIOExecutor,
    *,
    user_id: uuid.UUID,
    template_name: str,
) -> getAllClientsFromTemplateResult | None:
    return await executor.query_single(
        """\
        with selection := (
            select User.client {
                id,
                email,
                name,
                govt_id,
                type_client,
                address:{
                    city,
                    state
                },
                template_model
            } filter .id = <uuid>$user_id
        )
        select selection filter .template_model = <str>$template_name\
        """,
        user_id=user_id,
        template_name=template_name,
    )
