# AUTOGENERATED FROM 'app/queries/root/functions.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class FunctionsResult(NoPydanticValidation):
    id: uuid.UUID
    unit_num: int
    service_num: int
    transaction_num: int
    event_num: int
    templates_num: int
    balance_total: float


async def functions(
    executor: edgedb.AsyncIOExecutor,
    *,
    user_id: str,
) -> FunctionsResult:
    return await executor.query_single(
        """\
        with user_id := <str>$user_id
        select {
            unit_num:= unitNum(user_id),
            service_num:= serviceNum(user_id),
            transaction_num:= transactionNum(user_id),
            event_num:= eventNum(user_id),
            templates_num:= templatesNum(user_id),
            balance_total:= balanceTotal(user_id)
        }\
        """,
        user_id=user_id,
    )
